services:
  db:
    image: postgres:15
    container_name: localagentweaver-db
    environment:
      POSTGRES_DB: localagentweaver
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: localagentweaver-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: localagentweaver-backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/localagentweaver
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - CORS_ORIGINS=http://localhost:3000
      - OLLAMA_BASE_URL=http://ollama:11434
      - LM_STUDIO_BASE_URL=http://localagentweaver-lmstudio:1234
      - UPLOAD_MAX_SIZE_MB=30
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: localagentweaver-frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped

  # Ollama LLM service (activated with --profile ollama)
  ollama:
    image: ollama/ollama:latest
    container_name: localagentweaver-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    profiles:
      - ollama
    # Uncomment below for GPU support (requires NVIDIA Container Toolkit)
    # deploy:
      # resources:
      #   reservations:
      #     devices:
      #       - driver: nvidia
      #         count: 1
      #         capabilities: [gpu]
    runtime: nvidia
volumes:
  postgres_data:
  redis_data:
  uploads:
  ollama_data: